---
# tasks file for metallb
- name: Check required variables
  fail: msg="{{ item }} not provided"
  when: vars[item] is undefined
  loop:
    - root_folder
    - site_file

- name: Stat site_file
  stat:
      path: "{{ root_folder }}/{{ site_file }}"
  register: stat_site_file

- name: Break if site_file missing
  fail: msg="site_file not found"
  when: not stat_site_file.stat.exists

- name: Create metallb folder
  file:
    path: "{{ root_folder }}/metallb"
    state: directory
    mode: 0774
  register: metallb_folder

- name: Create manifest folder
  file:
    path: "{{ metallb_folder.path }}/manifest"
    state: directory
    mode: 0774

- name: Create secrets folder
  file:
    path: "{{ metallb_folder.path }}/secrets"
    state: directory
    mode: 0774

- name: Create tmpfolder
  tempfile:
    state: directory
    suffix: metallb
  register: build_dir

- name: Update helm chart 
  local_action:
    module: git
    repo: https://github.com/bitnami/charts
    dest: "{{ role_path }}/files/charts"
  run_once: true

- name: Check if helm overlay exists
  stat:
    path: "{{ metallb_folder.path }}/overlay/helm.yaml"
  register: helm_overlay

  #- name: debug site_file_path
  #  debug: var=stat_site_file.stat.path

- name: decrypt site file
  shell: |-
      echo "#@data/values
      #@overlay/match missing_ok=True
      #@overlay/match-child-defaults missing_ok=True
      ---
      $(sops -d {{ stat_site_file.stat.path }})"
  register: site_file_decrypted
  when: use_sops is defined

- name: store decrypted site file in var
  set_fact:
      site_file_content: "{{ site_file_decrypted.stdout }}"
  when: use_sops is defined
  
- name: load site file
  shell: |
    echo "#@data/values
    #@overlay/match missing_ok=True
    #@overlay/match-child-defaults missing_ok=True
    ---
    $(cat {{ root_folder }}/{{ site_file }})"
  register: site_file_plain
  when: use_sops is not defined

- name: store plain text site file in var
  set_fact:
      site_file_content: "{{ site_file_plain.stdout }}"
  when: use_sops is not defined

- name: Process ytt secrets
  shell: "{{ lookup('template', 'ytt-secrets.sh') }}"

- name: Process ytt templates
  shell: "{{ lookup('template', 'ytt-templates.sh') }}"
 
- name: Generate helm manifest
  shell: |
      helm template metallb {{ role_path }}/files/charts/bitnami/metallb/ \
      -f {{ build_dir.path }}/ytt/helm-values.yaml \
      -n metallb \
      --output-dir {{ build_dir.path }}/helm/

- name: Check if manifest overlay exists
  stat:
    path: "{{ metallb_folder.path }}/overlay/manifest.yaml"
  register: manifest_overlay

- name: Apply manifest overlay
  shell: "{{ lookup('template', 'ytt-overlay.sh') }}"

- name: Assemble manifest
  shell: |
      cp {{ build_dir.path }}/ytt/ConfigMap.yaml {{ metallb_folder.path }}/manifest/
      cp {{ build_dir.path }}/ytt/namespace.yaml {{ metallb_folder.path }}/manifest/

- name: Fix permission
  shell: |
      chmod ugo-x {{ metallb_folder.path }}/manifest/*
      chmod ugo-x {{ metallb_folder.path }}/secrets/*
  args:
      warn: no

- name: Render text-templates
  shell: "{{ lookup('template', 'ytt-text-templates.sh') }}"

